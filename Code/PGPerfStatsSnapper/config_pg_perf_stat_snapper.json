{
  "SNAP": [
		{
			"query": "select * from pg_stat_statements",
			"filename": "pg_stat_statements_history.csv",
			"object": "pg_stat_statements",
			"target": "pg_stat_statements_history",
			"add_snap_id": 1
		},
		{
			"query": "select * from pg_stat_activity",
			"filename": "pg_stat_activity_history.csv",
			"object": "pg_stat_activity",
			"target": "pg_stat_activity_history",
			"add_snap_id": 1
		},
		{
			"query": "select * from pg_statio_all_indexes",
			"filename": "pg_statio_all_indexes_history.csv",
			"object": "pg_statio_all_indexes",
			"target": "pg_statio_all_indexes_history",
			"add_snap_id": 1
		},
		{
			"query": "select * from pg_statio_all_tables",
			"filename": "pg_statio_all_tables_history.csv",
			"object": "pg_statio_all_tables",
			"target": "pg_statio_all_tables_history",
			"add_snap_id": 1
		},
		{
			"query": "select * from pg_stat_database",
			"filename": "pg_stat_database_history.csv",
			"object": "pg_stat_database",
			"target": "pg_stat_database_history",
			"add_snap_id": 1
		},
		{
			"query": "select * from pg_stat_all_tables",
			"filename": "pg_stat_all_tables_history.csv",
			"object": "pg_stat_all_tables",
			"target": "pg_stat_all_tables_history",
			"add_snap_id": 1
		},
		{
			"query": "select * from pg_stat_all_indexes",
			"filename": "pg_stat_all_indexes_history.csv",
			"object": "pg_stat_all_indexes",
			"target": "pg_stat_all_indexes_history",
			"add_snap_id": 1
		},
		{
			"query": "select * from pg_stat_progress_vacuum",
			"filename": "pg_stat_progress_vacuum_history.csv",
			"object": "pg_stat_progress_vacuum",
			"target": "pg_stat_progress_vacuum_history",
			"add_snap_id": 1
		},
		{
			"query": "select * from pg_locks",
			"filename": "pg_locks_history.csv",
			"object": "pg_locks",
			"target": "pg_locks_history",
			"add_snap_id": 1
		},
		{
			"query": "select * from pg_stat_bgwriter",
			"filename": "pg_stat_bgwriter_history.csv",
			"object": "pg_stat_bgwriter",
			"target": "pg_stat_bgwriter_history",
			"add_snap_id": 1
		},
		{
			"query": "select * from aurora_log_report(5)",
			"filename": "aurora_log_report_history.csv",
			"ddl_query": "select * from aurora_log_report(1) where 1=0",
			"target": "aurora_log_report_history",
			"add_snap_id": 1	
		}
  ],
  "PACKAGE": [
		{
			"query": "select * from pg_class",
			"filename": "pg_class.csv",
			"object": "pg_class",
			"target": "pg_class_cust",
			"add_snap_id": 0
		},
		{
			"query": "select * from pg_index",
			"filename": "pg_index.csv",
			"object": "pg_index",
			"target": "pg_index_cust",
			"add_snap_id": 0
		},
		{
			"query": "select * from pg_indexes",
			"filename": "pg_indexes.csv",
			"object": "pg_indexes",
			"target": "pg_indexes_cust",
			"add_snap_id": 0
		},
		{
			"query": "select * from pg_settings",
			"filename": "pg_settings.csv",
			"object": "pg_settings",
			"target": "pg_settings_cust",
			"add_snap_id": 0
		},
		{
			"query": "select * from pg_database",
			"filename": "pg_database.csv",
			"object": "pg_database",
			"target": "pg_database_cust",
			"add_snap_id": 0
		},
		{
			"query": "select * from pg_roles",
			"filename": "pg_roles.csv",
			"object": "pg_roles",
			"target": "pg_roles_cust",
			"add_snap_id": 0
		},
		{
			"query": "SELECT d.datname AS Name,  pg_catalog.pg_get_userbyid(d.datdba) AS Owner, CASE WHEN pg_catalog.has_database_privilege(d.datname, 'CONNECT') THEN pg_catalog.pg_size_pretty(pg_catalog.pg_database_size(d.datname)) ELSE 'No Access' END AS SIZE FROM pg_catalog.pg_database d ORDER BY CASE WHEN pg_catalog.has_database_privilege(d.datname, 'CONNECT') THEN pg_catalog.pg_database_size(d.datname) ELSE NULL END DESC",
			"filename": "size_database.csv",
			"ddl_query": "SELECT d.datname AS Name,  pg_catalog.pg_get_userbyid(d.datdba) AS Owner, CASE WHEN pg_catalog.has_database_privilege(d.datname, 'CONNECT') THEN pg_catalog.pg_size_pretty(pg_catalog.pg_database_size(d.datname)) ELSE 'No Access' END AS SIZE FROM pg_catalog.pg_database d where 1=0",
			"target": "size_database_cust",
			"add_snap_id": 0
		},
		{
			"query": "SELECT schema_name, pg_size_pretty(sum(table_size)::bigint), trunc((sum(table_size) / pg_database_size(current_database())) * 100,2) as percent FROM ( SELECT pg_catalog.pg_namespace.nspname as schema_name, pg_relation_size(pg_catalog.pg_class.oid) as table_size FROM   pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON relnamespace = pg_catalog.pg_namespace.oid ) t GROUP BY schema_name ORDER BY schema_name",
			"filename": "size_schema.csv",
			"ddl_query": "SELECT schema_name, pg_size_pretty(sum(table_size)::bigint), trunc((sum(table_size) / pg_database_size(current_database())) * 100,2) as percent FROM ( SELECT pg_catalog.pg_namespace.nspname as schema_name, pg_relation_size(pg_catalog.pg_class.oid) as table_size FROM   pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON relnamespace = pg_catalog.pg_namespace.oid ) t where 1=0 GROUP BY schema_name",
			"target": "size_schema_cust",
			"add_snap_id": 0
		},
		{
			"query": "SELECT c.oid,nspname AS schema_name, relname AS table_name, to_char(c.reltuples,'99999999999999999999') AS row_estimate, pg_size_pretty(pg_total_relation_size(c.oid)) AS total_size, pg_size_pretty(pg_relation_size (c.oid)) AS table_size, pg_size_pretty(pg_indexes_size(c.oid)) AS index_size, pg_size_pretty(pg_total_relation_size(reltoastrelid)) AS toast_size FROM pg_class c LEFT JOIN pg_namespace n ON n.oid = c.relnamespace where nspname NOT IN ('pg_catalog', 'information_schema') and nspname !~ '^pg_toast' and c.relkind in ('r','m') order by pg_total_relation_size(c.oid) DESC",
			"filename": "size_table_and_index.csv",
			"ddl_query": "SELECT c.oid,nspname AS schema_name, relname AS table_name, to_char(c.reltuples,'99999999999999999999') AS row_estimate, pg_size_pretty(pg_total_relation_size(c.oid)) AS total_size, pg_size_pretty(pg_relation_size (c.oid)) AS table_size, pg_size_pretty(pg_indexes_size(c.oid)) AS index_size, pg_size_pretty(pg_total_relation_size(reltoastrelid)) AS toast_size FROM pg_class c LEFT JOIN pg_namespace n ON n.oid = c.relnamespace where nspname NOT IN ('pg_catalog', 'information_schema') and nspname !~ '^pg_toast' and c.relkind in ('r','m') and 1=0",
			"target": "size_table_and_index_cust",
			"add_snap_id": 0
		},
		{
			"query": "SELECT c.oid::regclass as table_name, greatest(age(c.relfrozenxid),age(t.relfrozenxid)) as age, pg_size_pretty(pg_table_size(c.oid)) as table_size FROM pg_class c LEFT JOIN pg_class t ON c.reltoastrelid = t.oid WHERE c.relkind = 'r' ORDER BY 2 DESC",
			"filename": "aging_tables_for_vacuum.csv",
			"ddl_query": "SELECT c.oid::regclass as table_name, greatest(age(c.relfrozenxid),age(t.relfrozenxid)) as age, pg_size_pretty(pg_table_size(c.oid)) as table_size FROM pg_class c LEFT JOIN pg_class t ON c.reltoastrelid = t.oid WHERE c.relkind = 'r' and 1=0",
			"target": "aging_tables_for_vacuum_cust",
			"add_snap_id": 0
		}
	],
	"DATA_TYPE_REPLACE": [
		{
			"source": "regclass",
			"target": "text"
		},
		{
			"source": "pg_node_tree",
			"target": "text"
		},
		{
			"source": "aclitem",
			"target": "text"
		}	
	]
}
